import os
import re

INCLUDE_PATTERN = re.compile(r'^#include\s+"([^"]+)"$')

def list_c_files(dir: str) -> 'list[str]':
    return [os.path.join(dir, file) for file in os.listdir(dir) if file[-2:] == ".c"]

def list_h_files(dir: str) -> 'list[str]':
    return [os.path.join(dir, file) for file in os.listdir(dir) if file[-2:] == ".h"]

def expand_file(file, included_files):
    if file in included_files:
        return ""

    included_files.add(file)

    with open(file, "r") as f:
        lines = f.readlines()
        # Process includes in the included file
        expanded_code = f"""
// Expanded from {file}
"""
        for line in lines:
            match = INCLUDE_PATTERN.match(line.strip())
            if match:
                expanded_code += expand_file(os.path.normpath(os.path.join(os.path.dirname(file),match.group(1))), included_files)
            else:
                expanded_code += line

        return expanded_code + "\n"

def compile_library():
    included_files = set()
    src_dirs = ["src/chess"]
    files = []
    for dir in src_dirs:
        files += list_c_files(dir)

    codeBlob = """
//
// File Generated By Build Script
//

"""

    for file in files:
        codeBlob += expand_file(file, included_files)
    with open("PieceMealLib.c", "w") as out:
        out.write(codeBlob)




if __name__ == "__main__":
    compile_library()